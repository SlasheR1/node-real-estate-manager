<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="/css/forms.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/pikaday/css/pikaday.css">
    <style>
        :root {
            --primary-color: #4f46e5;
            --primary-light: #eef2ff;
            --primary-dark: #4338ca;
            --success-color: #10b981;
            --success-light: #d1fae5;
            --danger-color: #ef4444;
            --danger-light: #fee2e2;
            --neutral-100: #f5f5f5;
            --neutral-200: #e5e5e5;
            --neutral-300: #d4d4d4;
            --neutral-500: #737373;
            --neutral-700: #404040;
            --neutral-900: #171717;
            --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
            --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
            --radius-sm: 0.25rem;
            --radius-md: 0.375rem;
            --radius-lg: 0.5rem;
            --transition: all 0.2s ease;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
            line-height: 1.6;
            color: var(--neutral-900);
            background-color: #f9fafb;
        }

        .container {
            width: 100%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 1rem;
        }

        /* Заголовок и верхняя часть */
        .page-header {
            background-color: white;
            padding: 2rem 0;
            box-shadow: var(--shadow-sm);
            margin-bottom: 2rem;
        }

        .page-header h1 {
            font-size: 1.75rem;
            font-weight: 700;
            color: var(--neutral-900);
            margin-bottom: 0.5rem;
        }

        /* Карточка бронирования */
        .booking-card {
            background-color: white;
            border-radius: var(--radius-lg);
            box-shadow: var(--shadow-md);
            padding: 2rem;
            margin-bottom: 2rem;
            max-width: 700px;
            margin: 0 auto 2rem;
        }

        .property-info {
            display: flex;
            align-items: center;
            margin-bottom: 1.5rem;
            padding-bottom: 1.5rem;
            border-bottom: 1px solid var(--neutral-200);
        }

        .property-image {
            width: 80px;
            height: 80px;
            border-radius: var(--radius-md);
            background-color: var(--primary-light);
            margin-right: 1rem;
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--primary-color);
            font-size: 1.5rem;
        }

        .property-details {
            flex: 1;
        }

        .property-name {
            font-size: 1.25rem;
            font-weight: 600;
            margin-bottom: 0.25rem;
            color: var(--neutral-900);
        }

        .property-link {
            color: var(--primary-color);
            text-decoration: none;
            font-weight: 500;
            display: inline-flex;
            align-items: center;
            transition: var(--transition);
        }

        .property-link:hover {
            color: var(--primary-dark);
        }

        .property-link i {
            font-size: 0.75rem;
            margin-left: 0.25rem;
        }

        /* Баланс пользователя */
        .balance-card {
            background-color: var(--primary-light);
            border-radius: var(--radius-md);
            padding: 1rem;
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .balance-info {
            display: flex;
            align-items: center;
            color: var(--primary-dark);
        }

        .balance-icon {
            width: 36px;
            height: 36px;
            background-color: white;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 1rem;
            color: var(--primary-color);
            box-shadow: var(--shadow-sm);
        }

        .balance-value {
            font-weight: 700;
            font-size: 1.125rem;
            color: var(--primary-dark);
        }

        /* Форма бронирования */
        .booking-form {
            margin-top: 1.5rem;
        }

        .form-title {
            font-size: 1.125rem;
            font-weight: 600;
            margin-bottom: 1.25rem;
            color: var(--neutral-700);
        }

        .dates-row {
            display: flex;
            gap: 1rem;
            margin-bottom: 1.5rem;
        }

        .form-group {
            flex: 1;
            margin-bottom: 1.25rem;
        }

        .form-control-wrapper {
            position: relative;
        }

        .form-group label {
            display: block;
            font-size: 0.875rem;
            font-weight: 500;
            margin-bottom: 0.5rem;
            color: var(--neutral-700);
        }

        /* Исправление для полей ввода дат */
       .form-control {
    width: 100%;
    padding: 0.75rem 1rem 0.75rem 2.5rem;
    border: 1px solid var(--neutral-300);
    border-radius: var(--radius-md);
    font-size: 1rem;
    transition: var(--transition);
    background-color: white;
    text-align: left;
}

.form-control-wrapper .form-control {
    padding-left: 2.5rem !important;
}

        .form-control:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);
            outline: none;
        }

        .form-control-icon {
            position: absolute;
            left: 0.75rem;
            top: 50%;
            transform: translateY(-50%);
            color: var(--neutral-500);
            z-index: 1;
            pointer-events: none;
        }

        /* Расчет стоимости */
        .price-calculation {
            background-color: var(--neutral-100);
            border-radius: var(--radius-md);
            padding: 1.5rem;
            margin: 1.5rem 0;
            border: 1px solid var(--neutral-200);
        }

        .price-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 0.75rem;
            font-size: 0.875rem;
            color: var(--neutral-700);
        }

        .price-row.total {
            margin-top: 1rem;
            padding-top: 1rem;
            border-top: 1px solid var(--neutral-300);
            font-size: 1.125rem;
            font-weight: 700;
            color: var(--neutral-900);
        }

        .total-value {
            color: var(--success-color);
            font-weight: 700;
        }

        /* Кнопки */
        .form-actions {
            display: flex;
            gap: 1rem;
            margin-top: 1.5rem;
        }

        .btn {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            padding: 0.75rem 1.5rem;
            border-radius: var(--radius-md);
            font-weight: 500;
            font-size: 1rem;
            cursor: pointer;
            transition: var(--transition);
            border: none;
        }

        .btn-primary {
            background-color: var(--primary-color);
            color: white;
        }

        .btn-primary:hover {
            background-color: var(--primary-dark);
        }

        .btn-primary:disabled {
            opacity: 0.7;
            cursor: not-allowed;
        }

        .btn-secondary {
            background-color: white;
            color: var(--neutral-700);
            border: 1px solid var(--neutral-300);
        }

        .btn-secondary:hover {
            background-color: var(--neutral-100);
        }

        .btn i {
            margin-right: 0.5rem;
            font-size: 0.875rem;
        }

        /* Сообщения */
        .flash-message {
            border-radius: var(--radius-md);
            padding: 1rem;
            margin-bottom: 1.5rem;
            position: relative;
            display: flex;
            align-items: center;
        }

        .flash-icon {
            margin-right: 0.75rem;
            font-size: 1.25rem;
        }

        .flash-success {
            background-color: var(--success-light);
            color: var(--success-color);
        }

        .flash-error {
            background-color: var(--danger-light);
            color: var(--danger-color);
        }

        .close-flash {
            position: absolute;
            right: 1rem;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            color: inherit;
            opacity: 0.7;
            cursor: pointer;
            padding: 0.25rem;
            font-size: 1rem;
        }

        .close-flash:hover {
            opacity: 1;
        }

        /* Календарь Pikaday */
        .pika-single {
            border-radius: var(--radius-md);
            box-shadow: var(--shadow-lg);
            border: none;
            padding: 1rem;
            width: 300px;
        }

        .pika-title {
            padding-bottom: 0.5rem;
        }

        .pika-label {
            font-weight: 600;
            color: var(--neutral-900);
        }

        .pika-table th {
            color: var(--neutral-700);
            font-weight: 500;
            font-size: 0.75rem;
            padding-bottom: 0.5rem;
        }

        .pika-button {
            background: transparent;
            border-radius: var(--radius-sm);
            text-align: center;
            width: 32px;
            height: 32px;
            padding: 0;
            font-size: 0.875rem;
        }

        .pika-day {
            color: var(--neutral-900);
        }

        .is-today .pika-button {
            color: var(--primary-color);
            font-weight: 600;
        }

        .is-selected .pika-button {
            background-color: var(--primary-color);
            box-shadow: none;
        }

        .is-booked .pika-button {
            background-color: var(--danger-light) !important;
            color: var(--danger-color) !important;
            position: relative;
        }

        .is-booked .pika-button::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 0;
            right: 0;
            height: 2px;
            background-color: var(--danger-color);
            opacity: 0.5;
        }

        /* Адаптивность */
        @media (max-width: 640px) {
            .dates-row {
                flex-direction: column;
                gap: 0;
            }
            
            .form-actions {
                flex-direction: column;
            }
            
            .btn {
                width: 100%;
            }
            
            .property-info {
                flex-direction: column;
                text-align: center;
            }
            
            .property-image {
                margin-right: 0;
                margin-bottom: 1rem;
            }
            
            .balance-card {
                flex-direction: column;
                text-align: center;
            }
            
            .balance-icon {
                margin-right: 0;
                margin-bottom: 0.5rem;
            }
        }
    </style>
</head>
<body>
    <%- include('partials/header') %>

    <div class="page-header">
        <div class="container">
            <h1><%= title %></h1>
        </div>
    </div>

    <main class="container">
        <div id="bookingMessages">
            <%- include('partials/messages') %>
        </div>

        <% if (typeof property !== 'undefined') { %>
            <div class="booking-card">
                <div class="property-info">
                    <div class="property-image">
                        <i class="fas fa-home"></i>
                    </div>
                    <div class="property-details">
                        <h2 class="property-name"><%= property.Title %></h2>
                        <a href="/properties/<%= property.Id %>" class="property-link">
                            Просмотр деталей <i class="fas fa-chevron-right"></i>
                        </a>
                    </div>
                </div>

                <div class="balance-card">
                    <div class="balance-info">
                        <div class="balance-icon">
                            <i class="fas fa-wallet"></i>
                        </div>
                        <div>
                            <div>Ваш текущий баланс</div>
                            <div class="balance-value"><%= new Intl.NumberFormat('ru-RU', { style: 'currency', currency: 'RUB' }).format(currentBalance || 0) %></div>
                        </div>
                    </div>
                </div>

                <form action="/bookings/new" method="POST" id="bookingForm" class="booking-form">
                    <input type="hidden" name="propertyId" value="<%= property.Id %>">
                    
                    <h3 class="form-title">Выберите даты бронирования</h3>
                    
                    <div class="dates-row">
                        <div class="form-group">
                            <label for="startDate">Дата заезда *</label>
                            <div class="form-control-wrapper">
                                <i class="fas fa-calendar-alt form-control-icon"></i>
                                <input type="text" id="startDate" name="startDate" value="<%= typeof startDateValue !== 'undefined' ? startDateValue : '' %>" required autocomplete="off" placeholder="Выберите дату" class="form-control">
                            </div>
                        </div>
                        
                        <div class="form-group">
                            <label for="endDate">Дата выезда *</label>
                            <div class="form-control-wrapper">
                                <i class="fas fa-calendar-alt form-control-icon"></i>
                                <input type="text" id="endDate" name="endDate" value="<%= typeof endDateValue !== 'undefined' ? endDateValue : '' %>" required autocomplete="off" placeholder="Выберите дату" class="form-control">
                            </div>
                        </div>
                    </div>
                    
                    <div class="price-calculation" id="priceCalculationBlock" style="display: none;">
                        <div class="price-row">
                            <span>Продолжительность</span>
                            <span><strong id="durationDays">0</strong> дней</span>
                        </div>
                        <div class="price-row">
                            <span>Цена за сутки</span>
                            <span><strong><%= property.CalculatedDailyPrice ? new Intl.NumberFormat('ru-RU', { style: 'currency', currency: 'RUB' }).format(property.CalculatedDailyPrice) : '?' %></strong></span>
                        </div>
                        <div class="price-row total">
                            <span>Итого к оплате</span>
                            <span class="total-value" id="totalCost">0 ₽</span>
                        </div>
                    </div>
                    
                    <div class="form-actions">
                        <button type="submit" class="btn btn-primary" id="submitBookingBtn">
                            <i class="fas fa-check"></i> Забронировать
                        </button>
                        <a href="/properties/<%= property.Id %>" class="btn btn-secondary">
                            <i class="fas fa-times"></i> Отмена
                        </a>
                    </div>
                </form>
            </div>
        <% } else { %>
            <% if (!locals.message) { %>
                <div class="flash-message flash-error">
                    <i class="fas fa-exclamation-circle flash-icon"></i>
                    <div>Информация об объекте недвижимости недоступна.</div>
                </div>
            <% } %>
            <div class="text-center">
                <a href="/properties" class="btn btn-secondary">
                    <i class="fas fa-arrow-left"></i> К списку объектов
                </a>
            </div>
        <% } %>
    </main>

    <%- include('partials/footer') %>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/locale/ru.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/pikaday/pikaday.js"></script>
    <script id="busyPeriodsData" type="application/json"> <%- busyPeriods || '[]' %> </script>
    <script>
        // Инициализация Pikaday и расчета стоимости
        const dailyPrice = parseFloat("<%= typeof property !== 'undefined' ? (property.CalculatedDailyPrice || 0) : 0 %>");
        
        let busyPeriodsRaw = [];
        try {
            const el = document.getElementById('busyPeriodsData');
            if(el) busyPeriodsRaw = JSON.parse(el.textContent || '[]');
        } catch(e) {
            console.error("Ошибка при парсинге занятых периодов:", e);
        }
        
        const disabledDates = [];
        busyPeriodsRaw.forEach(period => {
            let current = moment(period.start).startOf('day');
            const end = moment(period.end).startOf('day');
            
            while(current.isBefore(end)) {
                disabledDates.push(current.toDate());
                current.add(1, 'day');
            }
        });
        
        const today = moment().startOf('day').toDate();
        const maxDate = moment().add(3, 'months').toDate();
        
        const i18n_options = {
            previousMonth: 'Предыдущий',
            nextMonth: 'Следующий',
            months: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],
            weekdays: ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'],
            weekdaysShort: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб']
        };
        
        function isDateDisabled(date) {
            const timestamp = moment(date).startOf('day').toDate().getTime();
            return disabledDates.some(disabledDate => disabledDate.getTime() === timestamp);
        }
        
        function markBookedDates(picker) {
            if(!picker || !picker.el) return;
            
            const dateElements = picker.el.querySelectorAll('.pika-button');
            dateElements.forEach(dateEl => {
                try {
                    const dateStr = `${dateEl.dataset.pikaYear}-${('0' + (parseInt(dateEl.dataset.pikaMonth) + 1)).slice(-2)}-${('0' + dateEl.dataset.pikaDay).slice(-2)}`;
                    const date = moment(dateStr).startOf('day').toDate();
                    
                    dateEl.parentNode.classList.remove('is-booked');
                    if(isDateDisabled(date)) {
                        dateEl.parentNode.classList.add('is-booked');
                    }
                } catch(e) {
                    console.error("Ошибка при маркировке дат:", e);
                }
            });
        }
        
        let startPicker, endPicker;
        
        startPicker = new Pikaday({
            field: document.getElementById('startDate'),
            format: 'YYYY-MM-DD',
            toString(date, format) {
                return moment(date).format(format);
            },
            parse(dateStr, format) {
                const m = moment(dateStr, format);
                return m.isValid() ? m.toDate() : null;
            },
            minDate: today,
            maxDate: maxDate,
            disableDayFn: isDateDisabled,
            i18n: i18n_options,
            onDraw: function() {
                markBookedDates(this);
            },
            onSelect: function(date) {
                const nextDay = moment(date).add(1, 'day').toDate();
                
                if(endPicker) {
                    endPicker.setMinDate(nextDay);
                    
                    if(endPicker.getDate() && endPicker.getDate() < nextDay) {
                        endPicker.setDate(null);
                    }
                }
                
                calculateCost();
            }
        });
        
        endPicker = new Pikaday({
            field: document.getElementById('endDate'),
            format: 'YYYY-MM-DD',
            toString(date, format) {
                return moment(date).format(format);
            },
            parse(dateStr, format) {
                const m = moment(dateStr, format);
                return m.isValid() ? m.toDate() : null;
            },
            minDate: startPicker.getDate() ? moment(startPicker.getDate()).add(1, 'day').toDate() : moment(today).add(1, 'day').toDate(),
            maxDate: maxDate,
            disableDayFn: isDateDisabled,
            i18n: i18n_options,
            onDraw: function() {
                markBookedDates(this);
            },
            onSelect: function(date) {
                if(startPicker.getDate() && date <= startPicker.getDate()) {
                    endPicker.setDate(null);
                    alert("Дата выезда должна быть позже даты заезда.");
                }
                
                calculateCost();
            }
        });
        
        const durationEl = document.getElementById('durationDays');
        const costEl = document.getElementById('totalCost');
        const priceBlock = document.getElementById('priceCalculationBlock');
        const submitBtn = document.getElementById('submitBookingBtn');
        
        function calculateCost() {
            const startDate = startPicker.getDate();
            const endDate = endPicker.getDate();
            let isValid = false;
            
            priceBlock.style.display = 'none';
            
            if(submitBtn) submitBtn.disabled = true;
            
            if(startDate && endDate && dailyPrice > 0) {
                const startMoment = moment(startDate).startOf('day');
                const endMoment = moment(endDate).startOf('day');
                
                if(endMoment.isAfter(startMoment)) {
                    let currentDay = startMoment.clone();
                    let datesAvailable = true;
                    
                    while(currentDay.isBefore(endMoment)) {
                        if(isDateDisabled(currentDay.toDate())) {
                            datesAvailable = false;
                            break;
                        }
                        currentDay.add(1, 'day');
                    }
                    
                    if(datesAvailable) {
                        const duration = endMoment.diff(startMoment, 'days');
                        
                        if(duration > 0 && duration <= 90) {
                            const totalPrice = duration * dailyPrice;
                            
                            durationEl.textContent = duration;
                            costEl.textContent = new Intl.NumberFormat('ru-RU', {
                                style: 'currency',
                                currency: 'RUB',
                                minimumFractionDigits: 0,
                                maximumFractionDigits: 2
                            }).format(totalPrice);
                            
                            priceBlock.style.display = 'block';
                            isValid = true;
                        }
                    }
                }
            }
            
            if(submitBtn) submitBtn.disabled = !isValid;
        }
        
        // Вызываем расчет стоимости при загрузке страницы
        window.addEventListener('DOMContentLoaded', calculateCost);
        
        // Блокировка кнопки при отправке формы
        const bookingForm = document.getElementById('bookingForm');
        const bookingSubmitBtn = document.getElementById('submitBookingBtn');
        
        if(bookingForm && bookingSubmitBtn) {
            bookingForm.addEventListener('submit', () => {
                if(!bookingSubmitBtn.disabled) {
                    bookingSubmitBtn.disabled = true;
                    bookingSubmitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Бронирование...';
                }
            });
        }
        
        // Обработчик для закрытия сообщений
        document.querySelectorAll('.close-flash').forEach(button => {
            button.addEventListener('click', function() {
                this.closest('.flash-message').remove();
            });
        });
    </script>
</body>
</html>